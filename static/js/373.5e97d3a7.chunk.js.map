{"version":3,"file":"static/js/373.5e97d3a7.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","../node_modules/@chakra-ui/layout/src/list.tsx","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["\nexport const getContacts = (state) => state.contacts.contacts;\nexport const getFilter = (state) => state.filter;\nexport const selectLoading = state => state.contacts.loading;\n\n\nexport const getVisibleContacts = state => {\n    const contacts = getContacts(state); \n    const filter = getFilter(state); \n    const normalizedFilter = filter.toLowerCase(); \n  \n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport type {\n  HTMLChakraProps,\n  SystemProps,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\n\nconst [ListStylesProvider, useListStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `ListStylesContext`,\n  errorMessage: `useListStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<List />\" `,\n})\n\nexport { useListStyles }\n\ninterface ListOptions {\n  /**\n   * Shorthand prop for `listStyleType`\n   * @type SystemProps[\"listStyleType\"]\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Shorthand prop for `listStylePosition`\n   * @type SystemProps[\"listStylePosition\"]\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps\n  extends HTMLChakraProps<\"ul\">,\n    ThemingProps<\"List\">,\n    ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const styles = useMultiStyleConfig(\"List\", props)\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = omitThemingProps(props)\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  const spacingStyle = spacing ? { [selector]: { mt: spacing } } : {}\n\n  return (\n    <ListStylesProvider value={styles}>\n      <chakra.ul\n        ref={ref}\n        listStyleType={styleType}\n        listStylePosition={stylePosition}\n        /**\n         * We added this role to fix the Safari accessibility issue with list-style-type: none\n         * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n         */\n        role=\"list\"\n        __css={{ ...styles.container, ...spacingStyle }}\n        {...rest}\n      >\n        {validChildren}\n      </chakra.ul>\n    </ListStylesProvider>\n  )\n})\n\nList.displayName = \"List\"\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">((props, ref) => {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nOrderedList.displayName = \"OrderedList\"\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginStart=\"1em\" {...rest} />\n  )\n})\n\nUnorderedList.displayName = \"UnorderedList\"\n\nexport interface ListItemProps extends HTMLChakraProps<\"li\"> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = forwardRef<ListItemProps, \"li\">(function ListItem(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <chakra.li ref={ref} {...props} __css={styles.item} />\n})\n\nListItem.displayName = \"ListItem\"\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  const styles = useListStyles()\n\n  return <Icon ref={ref} role=\"presentation\" {...props} __css={styles.icon} />\n})\n\nListIcon.displayName = \"ListIcon\"\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\nimport { getVisibleContacts } from '../../redux/contacts/selectors';\nimport { Button, List, ListItem, Text,Flex,Box} from '@chakra-ui/react';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (!contacts?.length) {\n    return <Text fontSize='20px' fontWeight='500' color='#2C7744'>No contacts found</Text>;\n  }\n\n  return (\n<Flex display='flex' flexDirection='column'>\n      <List display='flex' flexDirection='column'>\n        {contacts.map(({ id, name, number }) => (\n          <ListItem mb='15px' color=\"#2C7744\" fontWeight=\"700\" fontSize=\"20px\" key={id}>\n            <Box w='800px' display='flex' flexDirection='row' justifyContent='space-between'>\n              <Box display='flex' flexDirection='row' >\n            <Text  color='#8360c3' mr='8px' >{name}: </Text>\n            <Text mr='20px'>{number} </Text>\n            </Box>\n            <Button\n              variant=\"solid\"\n              colorScheme=\"blue\"\n              height=\"28px\"\n              border=\"0.5px\"\n              borderColor=\"green.500\"\n              w=\"80px\"\n              h=\"30px\"\n              fontSize=\"10px\"\n              background=\"#E5543D\"\n              mr=\"6px\"\n              opacity=\"0.9\"\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </Button>\n            </Box>\n          </ListItem>\n        ))}\n      </List>\n      </Flex>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"paragraph\":\"ContactForm_paragraph__nRyTj\"};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { Input, Button, FormLabel, Flex,Text } from '@chakra-ui/react';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: nanoid(),\n      name: e.currentTarget.elements.name.value,\n      number: e.currentTarget.elements.number.value,\n    };\n\n    const nameExist = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n    if (nameExist) {\n      return toast.warn(`${contact.name} is already in contacts.`);\n    }\n    dispatch(addContact(contact));\n    e.currentTarget.reset();\n  };\n\n  return (\n    <Flex as='form'   bgGradient=\"linear(to-r, green.400, yellow.300)\" className={css.form} onSubmit={handleSubmit}>\n      <FormLabel >\n        <Text mb='9px' color='#2C7744' className={css.paragraph}>Name</Text>\n        <Input\n        mb='9px'\n          id={nanoid()}\n          type=\"text\"\n          name=\"name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel color='#2C7744' mb='9px' className={css.paragraph}>\n        <Text mb='9px' color='#2C7744' className={css.paragraph}>Number</Text>\n        <Input\n        mb='9px'\n          id={nanoid()}\n          type=\"tel\"\n          name=\"number\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <Button  variant=\"solid\"\n        colorScheme=\"blue\"\n        height=\"48px\"\n        border=\"2px\"\n        borderColor=\"green.500\"\n        type=\"submit\"\n        w=\"280px\"\n        h=\"50px\"\n        fontSize=\"20px\"\n        background='#257C4A'>\n        Add contact\n      </Button>\n    </Flex>\n  );\n};\n","import { setFilter } from '../../redux/contacts/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { Input, FormLabel,Text } from '@chakra-ui/react';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  return (\n    <FormLabel  display='flex' flexDirection='column' justifyContent='flex-start' m='25'>\n      <Text color ='rgb(24, 124, 196)' fontWeight='700' fontSize='20px' mb='15'>Find contacts by name</Text>\n      <Input\n      mb='25px'\n        w='680px'\n        type=\"text\"\n        value={filter}\n        border='green 2px solid'\n        onChange={event => dispatch(setFilter(event.target.value.trim()))}\n      />\n    </FormLabel>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from './../redux/contacts/operations';\nimport { selectLoading } from './../redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactsList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","getFilter","filter","selectLoading","loading","getVisibleContacts","normalizedFilter","toLowerCase","contact","name","includes","createContext","errorMessage","_createContext2","ListStylesProvider","useListStyles","List","forwardRef","props","ref","styles","useMultiStyleConfig","omitThemingProps","children","_omitThemingProps$sty","styleType","stylePosition","spacing","rest","validChildren","getValidChildren","spacingStyle","mt","value","chakra","ul","listStyleType","listStylePosition","role","__css","container","displayName","as","marginStart","ListItem","li","item","Icon","icon","ContactsList","dispatch","useDispatch","useSelector","useEffect","fetchContacts","length","_jsx","Flex","display","flexDirection","map","_ref","id","number","mb","color","fontWeight","fontSize","_jsxs","Box","w","justifyContent","Text","mr","Button","variant","colorScheme","height","border","borderColor","h","background","opacity","type","onClick","deleteContact","nanoid","size","arguments","undefined","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","ContactForm","bgGradient","className","css","onSubmit","e","preventDefault","currentTarget","elements","find","toast","concat","addContact","reset","FormLabel","Input","title","required","Filter","m","onChange","event","setFilter","target","trim","Contacts","isLoading","_Fragment","Helmet"],"sourceRoot":""}